openapi: 3.0.1
info:
  title: CDS Connect API
  version: '1.1'
  description: >-
    An API to allow authenticated users to GET, POST, and PATCH artifacts to the
    CDS Connect repository using a simplified JSON schema. Currently file attachments
    must either be uploaded beforehand and linked to using the JSON API File module,
    or manually added via the CDS Connect user interface (UI).
paths:
  /cds_api:
    get:
      summary: GET the JSON schema for a CDS Connect artifact.
      responses:
        '200':
          description: Respond with JSON schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cds_artifact_type'
        '400':
          description: Bad request
        '500':
          description: Internal server error
    post:
      summary: POST a new artifact to CDS Connect
      description: >-
        Authenticated users can create new artifacts on the CDS Connect repository
        by POSTing valid JSON per the CDS Connect native artifact schema. Users with
        accounts on CDS Connect must first POST their user 'name' and 'pass' to
        /user/login?_format=json to receive a login cookie.
      parameters:
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
        - name: X-CSRF-Token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cds_artifact_type'
      responses:
        '201':
          description: Respond with created artifact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cds_artifact_type'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /cds_api/{id}:
    get:
      summary: >-
        Authenticated users can GET the JSON representation of the CDS artifact 
        with id number {id}. Users with accounts on CDS Connect must first POST 
        their user 'name' and 'pass' to /user/login?_format=json to receive a login 
        cookie.
      parameters:
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
        - name: X-CSRF-Token
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the CDS artifact to return.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: >-
            Respond with JSON schema representation of the CDS artifact with id 
            number {id}.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cds_artifact_type'
        '400':
          description: Bad request
        '500':
          description: Internal server error
    patch:
      summary: PATCH existing artifact with id {id} on CDS Connect.
      description: >-
        Authenticated users can create new artifacts on the CDS Connect repository
        by POSTing valid JSON per the CDS Connect native artifact schema. Users with
        accounts on CDS Connect must first POST their user 'name' and 'pass' to
        /user/login?_format=json to receive a login cookie.
      parameters:
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
        - name: X-CSRF-Token
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the CDS artifact to update.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cds_artifact_type'
      responses:
        '200':
          description: Respond with updated artifact JSON.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cds_artifact_type'
        '400':
          description: Bad request
        '500':
          description: Internal server error
components:
  schemas:
    cds_artifact_type:
      required:
        - title
        - version
        - status
        - artifact_type
      properties:
        meta:
          type: object
          description: Optional properties to describe the CDS artifact; note that it is not possible to specify this for the request portion of POST (since POST is responsible for assigning it), but it is part of the JSON response for POST, GET, and PATCH.
          properties:
            node_id:
              type: integer
              description: Read-only number that is assigned by the repository.  This is needed for referencing an artifact in the REST API.
              readOnly: true
            self:
              type: string
              description: Read-only URI that is assigned by the repository.  This is needed for referencing the artifact in the REST API.
              readOnly: true
        title:
          type: string
          default: CDS Artifact Title
          description: The name of the artifact
        description:
          type: string
          description: A narrative description of the artifact, in plain language
        identifier:
          type: string
          description: Identifier defined by CDS Connect team for this artifact
          readOnly: true
        version:
          type: string
          default: 0.1
          description: Semantic Version Number of the artifact
        status:
          type: string
          default: Active
          description: The status of the artifact
          enum: [Active, Retired, Draft, Unknown]
        experimental:
          type: boolean
          description: If true, indicates this artifact is for testing, evaluation, educational or demonstration purposes and not intended for clinical use
        artifact_type:
          type: string
          default: Reference Information
          description: The type of the artifact
          enum: [Alert, Data Summary, Event-Condition-Action (ECA) rule, InfoButton, Order Set, Parameter Guidance, Reference Information, Reminder, Report, Risk Assessment, Smart Documentation Form, Warning]
        creation_date:
          type: string
          format: date
          example:
            - 2018-11-01
        creation_and_usage:
          type: object
          properties:
            license:
              type: string
              description: Taxonomy Term
            copyrights:
              type: string
            keywords:
              type: array
              items:
                type: string
                description: Taxonomy Term
            steward:
              type: array
              items:
                type: string
                description: Node title
            publisher:
              type: array
              items:
                type: string
                description: Node title
            contributors:
              type: string
            ip_attestation:
              type: boolean
        organization:
          type: object
          properties:
            clinical_domains:
              type: array
              items:
                type: string
                description: Taxonomy Term
            knowledge_level:
              type: array
              items:
                type: string
                description: Taxonomy Term
            related_artifacts:
              type: array
              items:
                type: string
                description: Node title
        representation:
          type: object
          properties:
            triggers:
              type: string
            inclusions:
              type: string
            exclusions:
              type: string
            interventions_and_actions:
              type: string
            logic_files:
              type: array
              items:
                type: string
                description: GET returns path to uploaded file. File upload must be accomplished using JSON API File module.
        implementation_details:
          type: object
          properties:
            engineering_details:
              type: string
            technical_files:
              type: array
              items:
                type: string
                description: GET returns path to uploaded file. File upload must be accomplished using JSON API File module.
            miscellaneous_files:
              type: array
              items:
                type: string
                description: GET returns path to uploaded file. File upload must be accomplished using JSON API File module.
        purpose_and_usage:
          type: object
          properties:
            purpose:
              type: string
            intended_population:
              type: string
            usage:
              type: string
            cautions:
              type: string
            test_patients:
              type: array
              items:
                type: string
                description: GET returns path to uploaded file. File upload must be accomplished using JSON API File module.
        supporting_evidence:
          type: object
          properties:
            source_description:
              type: string
            source:
              type: array
              items:
                type: string
                description: Source title
            references:
              type: string
            recommendation_statements:
              type: object
              properties:
                decision_notes:
                  type: string
                quality_of_evidence:
                  type: string
                recommendation:
                  type: string
                strength_of_recommendation:
                  type: string
        repository_information:
          type: object
          properties:
            approval_date:
              type: string
              format: date
              example:
                - 2018-11-01
            expiration_date:
              type: string
              format: date
              example:
                - 2018-11-01
            last_review_date:
              type: string
              format: date
              example:
                - 2018-11-01
            publication_date:
              type: string
              format: date
              example:
                - 2018-11-01
            preview_image:
              type: string
              description: GET returns path to uploaded file. File upload must be accomplished using JSON API File module.
        testing_experience:
          type: object
          properties:
            pilot_experience:
              type: string
        coverage_requirements_discovery:
          type: object
          description: Fields pertaining to coverage requirements discovery (CRD) for electronic prescribing (eRx) of medication or durable medical equipment (DME).
          properties:
            payer:
              type: string
              description: The name of the payer for the medication or durable medical equipment (DME). Only applicable for coverage requirement discovery (CRD) rules.
            code_system: 
              type: string
              description: The name of the code system used to reference medication or durable medical equipment (DME). Only applicable for coverage requirement discovery (CRD) rules.
            erx_code:
              type: string
              description: The electronic prescribing (eRx) code representing a specific piece of medication or durable medical equipment (DME). Only applicable for coverage requirement discovery (CRD) rules.
