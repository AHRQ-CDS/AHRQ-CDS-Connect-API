openapi: 3.0.1
info:
  title: CDS Connect API
  version: '1.1'
  description: >-
    An API to allow authenticated users to GET, POST, and PATCH artifacts to the
    CDS Connect repository using a simplified JSON schema. Currently file attachments
    must either be uploaded beforehand and linked to using the JSON API File module,
    or manually added via the CDS Connect user interface (UI).
paths:
  /cds_api:
    get:
      summary: GET the JSON schema for a CDS Connect artifact.
      responses:
        '200':
          description: Respond with JSON schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cds_artifact_type'
        '400':
          description: Bad request
        '500':
          description: Internal server error
    post:
      summary: POST a new artifact to CDS Connect
      description: >-
        Authenticated users can create new artifacts on the CDS Connect repository
        by POSTing valid JSON per the CDS Connect native artifact schema. Users with
        accounts on CDS Connect must first POST their user 'name' and 'pass' to
        /user/login?_format=json to receive a login cookie.
      parameters:
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
        - name: X-CSRF-Token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cds_artifact_type'
      responses:
        '201':
          description: Respond with created artifact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cds_artifact_type'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /cds_api/{id}:
    get:
      summary: >-
        Authenticated users can GET the JSON representation of the CDS artifact 
        with id number {id}. Users with accounts on CDS Connect must first POST 
        their user 'name' and 'pass' to /user/login?_format=json to receive a login 
        cookie.
      parameters:
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
        - name: X-CSRF-Token
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the CDS artifact to return.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: >-
            Respond with JSON schema representation of the CDS artifact with id 
            number {id}.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cds_artifact_type'
        '400':
          description: Bad request
        '500':
          description: Internal server error
    patch:
      summary: PATCH existing artifact with id {id} on CDS Connect.
      description: >-
        Authenticated users can create new artifacts on the CDS Connect repository
        by POSTing valid JSON per the CDS Connect native artifact schema. Users with
        accounts on CDS Connect must first POST their user 'name' and 'pass' to
        /user/login?_format=json to receive a login cookie.
      parameters:
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
        - name: X-CSRF-Token
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the CDS artifact to update.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cds_artifact_type'
      responses:
        '200':
          description: Respond with updated artifact JSON.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cds_artifact_type'
        '400':
          description: Bad request
        '500':
          description: Internal server error
components:
  schemas:
    cds_artifact_type:
      required:
        - title
        - version
        - status
        - artifact_type
      properties:
        meta:
          type: object
          description: Optional properties to describe the CDS artifact; note that it is not possible to specify this for the request portion of POST (since POST is responsible for assigning it), but it is part of the JSON response for POST, GET, and PATCH.
          properties:
            node_id:
              type: integer
              description: Read-only number that is assigned by the repository.  This is needed for referencing an artifact in the REST API.
              readOnly: true
            self:
              type: string
              description: Read-only URI that is assigned by the repository.  This is needed for referencing the artifact in the REST API.
              readOnly: true
        title:
          type: string
          default: CDS Artifact Title
          description: The name of the artifact
        description:
          type: string
          description: A narrative description of the artifact, in plain language.
        identifier:
          type: string
          description: Identifier defined by CDS Connect team for this artifact.
          readOnly: true
        version:
          type: string
          default: 0.1
          description: Semantic Version Number for the artifact (http://semver.org/).
        status:
          type: string
          default: Active
          description: The status of the artifact (see Status Taxonomy for possible values).
          enum: [Active, Retired, Draft, Unknown]
        experimental:
          type: boolean
          description: Flag indicating whether this artifact is experimental (in early draft state, not yet intended for clinical use).
        artifact_type:
          type: string
          default: Reference Information
          description: The type of the artifact (see Artifact Type Taxonomy for possible values).
          enum: [Alert, Data Summary, Event-Condition-Action (ECA) rule, InfoButton, Order Set, Parameter Guidance, Reference Information, Reminder, Report, Risk Assessment, Smart Documentation Form, Warning]
        creation_date:
          type: string
          format: date
          description: Date on which the artifact was created.
          example:
            - 2018-11-01
        creation_and_usage:
          type: object
          properties:
            license:
              type: string
              description: The license governing the artifactâ€™s usage (see License Taxonomy for possible values).
            copyrights:
              type: string
              description: Copyright statements associated with this artifact.
            keywords:
              type: array
              items:
                type: string
                description: User-defined keywords associated with this artifact.
            steward:
              type: array
              items:
                type: string
                description: The steward / owner of the artifact; should correspond with the name of an Organization entity on CDS Connect.
            publisher:
              type: array
              items:
                type: string
                description: The original publisher of the artifact; should correspond with the name of an Organization entity on CDS Connect.
            contributors:
              type: string
              description: List of individuals or organizations that contributed to the development of the artifact.
            ip_attestation:
              type: boolean
              description: Flag indicating that the author asserts that this artifact has been developed in compliance with the IP rights attributed to the source material.
        organization:
          type: object
          properties:
            mesh_topics:
              type: array
              items:
                type: string
                description: Topic tags derived from the National Library of Medicine 2019 Medical Subject Headings (MeSH) taxonomy.
            knowledge_level:
              type: string
              description: The four levels of knowledge representation of a CDS artifact by Boxwala et al (see Knowledge Level Taxonomy for possible values).
            related_artifacts:
              type: array
              items:
                type: string
                description: Other artifacts in the CDS repository related to this artifact; should correspond to the names of Artifact entities on CDS Connect.
        artifact_representation:
          type: object
          properties:
            triggers:
              type: string
              description: Triggers that should activate the artifact.
            inclusions:
              type: string
              description: Lists inclusion criteria to ensure that CDS interventions are applied to only appropriate scenarios evaluated in the patient record.
            exclusions:
              type: string
              description: Lists exclusion criteria to ensure that CDS interventions are not applied to individuals that should be excluded or exempt from the recommendation.
            interventions_and_actions:
              type: string
              description: Lists the possible interventions and actions taken by CDS to provide information when the conditions specified in a rule are met.
            logic_files:
              type: array
              items:
                type: string
                description: Attached documents that contain definitions or instances of the logic contained in the artifact. GET returns path to uploaded file. File upload must be accomplished using JSON API File module.
        implementation_details:
          type: object
          properties:
            engineering_details:
              type: string
              description: Any technical details an engineer may want to know.
            technical_files:
              type: array
              items:
                type: string
                description: Any and all technical files associated with the artifact (e.g., CQL code, JSON files, shell scripts, etc.). GET returns path to uploaded file. File upload must be accomplished using JSON API File module.
            miscellaneous_files:
              type: array
              items:
                type: string
                description: Any and all miscellaneous files associated with the artifact (e.g., screenshots, workflow diagrams, training materials, etc.). GET returns path to uploaded file. File upload must be accomplished using JSON API File module.
        purpose_and_usage:
          type: object
          properties:
            purpose:
              type: string
              description: The purpose of the artifact.
            intended_population:
              type: string
              description: The intended population that the artifact applies to.
            usage:
              type: string
              description: The context in which the artifact is applicable or should be used.
            cautions:
              type: string
              description: Any cautions or warnings to be considered regarding the artifact.
            test_patients:
              type: array
              items:
                type: string
                description: Sample test (artificial) patients which demonstrate features of the artifact. GET returns path to uploaded file. File upload must be accomplished using JSON API File module.
        supporting_evidence:
          type: object
          properties:
            source_description:
              type: string
              description: Description of the relationship between this artifact and the Source.
            source:
              type: string
              description: The primary source used to create the artifact.
            references:
              type: string
              description: References to external publications and resources related to the artifact.
            artifact_decision_notes:
              type: string
              description: Notes describing the use of the artifact in a pilot project.
            recommendation_statement:
              type: array
              items:
                type: object
                properties:
                  decision_notes:
                    type: string
                    description: Notes describing the decisions and choices that went into the recommendation statement.
                  quality_of_evidence:
                    type: string
                    description: The quality of the artifactâ€™s evidence (e.g., fair, good, poor).
                  recommendation:
                    type: string
                    description: A summary of clinical recommendations supporting the artifact.
                  strength_of_recommendation:
                    type: string
                    description: The strength of the artifactâ€™s recommendation.
        repository_information:
          type: object
          properties:
            approval_date:
              type: string
              description: The date the artifact was approved for the repository.
              format: date
              example:
                - 2018-11-01
            expiration_date:
              type: string
              description: The date at which artifact no longer effective.
              format: date
              example:
                - 2018-11-01
            last_review_date:
              type: string
              description: The date of last review.
              format: date
              example:
                - 2018-11-01
            publication_date:
              type: string
              description: The date that the artifact was originally published.
              format: date
              example:
                - 2018-11-01
            preview_image:
              type: string
              description: An image to be used as a thumbnail visualization for the artifact. GET returns path to uploaded file. File upload must be accomplished using JSON API File module.
        testing_experience:
          type: object
          properties:
            pilot_experience:
              type: string
              description: Description of how the artifact performed when piloted in a clinical setting (e.g., use, accuracy, impact, lessons learned).
        coverage_requirements_discovery:
          type: object
          description: Fields pertaining to coverage requirements discovery (CRD) for electronic prescribing (eRx) of medication or durable medical equipment (DME).
          properties:
            payer:
              type: string
              description: The name of the payer for the medication or durable medical equipment (DME). Only applicable for coverage requirement discovery (CRD) rules.
            code_system: 
              type: string
              description: The name of the code system used to reference medication or durable medical equipment (DME). Only applicable for coverage requirement discovery (CRD) rules.
            erx_code:
              type: string
              description: The electronic prescribing (eRx) code representing a specific piece of medication or durable medical equipment (DME). Only applicable for coverage requirement discovery (CRD) rules.
